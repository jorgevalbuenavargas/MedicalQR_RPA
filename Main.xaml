<Activity mc:Ignorable="sap sap2010" x:Class="StateMachine" sap:VirtualizedContainerService.HintSize="1456,835" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" mva:VisualBasic.Settings="Assembly references and imported namespaces for internal implementation" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mv="clr-namespace:Microsoft.VisualBasic;assembly=Microsoft.VisualBasic, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xmlns:s1="clr-namespace:System;assembly=mscorlib" xmlns:sa="clr-namespace:System.Activities;assembly=System.Activities, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data.DataSetExtensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xmlns:sd2="clr-namespace:System.Diagnostics;assembly=System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xmlns:sd3="clr-namespace:System.Drawing;assembly=System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" xmlns:sd4="clr-namespace:System.Diagnostics;assembly=System" xmlns:sd5="clr-namespace:System.Data;assembly=System.Data" xmlns:si="clr-namespace:System.IO;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xmlns:sl="clr-namespace:System.Linq;assembly=System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xmlns:sx="clr-namespace:System.Xml;assembly=System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg1:List x:TypeArguments="x:String" Capacity="20">
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.Statements</x:String>
    </scg1:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg1:List x:TypeArguments="AssemblyReference" Capacity="36">
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Configuration.Install</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg1:List>
  </TextExpression.ReferencesForImplementation>
  <StateMachine InitialState="{x:Reference __ReferenceID7}" DisplayName="State Machine" sap:VirtualizedContainerService.HintSize="1466,770" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
        <av:Point x:Key="ShapeLocation">30,42.5</av:Point>
        <x:Double x:Key="StateContainerWidth">1431.5840617518754</x:Double>
        <x:Double x:Key="StateContainerHeight">734.33739978143058</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">90,80 248.5,80</av:PointCollection>
      </scg1:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <State x:Name="__ReferenceID7" DisplayName="Settings Load" sap:VirtualizedContainerService.HintSize="227,87" sap2010:WorkflowViewState.IdRef="State_8">
      <State.Entry>
        <Sequence DisplayName="Sequence - Settings Load" sap:VirtualizedContainerService.HintSize="480,924" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg1:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Chronometer initialization" sap:VirtualizedContainerService.HintSize="438,66" sap2010:WorkflowViewState.IdRef="Sequence_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg1:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign - Set Transition Status to False in Settings load" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[bool_StateStatus]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Inicio de Cronómetro de la Máquina de Estado" DisplayName="Invoke ChronometerReset workflow" sap:VirtualizedContainerService.HintSize="334,118" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Chronometer\ChronometerReset.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_str_Name">Framework</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_str_ParentName" />
                <InArgument x:TypeArguments="x:String" x:Key="in_str_State">Executing</InArgument>
                <InOutArgument x:TypeArguments="sd4:Stopwatch" x:Key="io_stopwatchState">[stopwatchStateMachine]</InOutArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg1:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Inicio de Cronómetro del Estado Settings Load" DisplayName="Invoke ChronometerReset workflow" sap:VirtualizedContainerService.HintSize="334,118" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Chronometer\ChronometerReset.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_str_Name">Settings Load</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_str_ParentName">Framework</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_str_State">Executing</InArgument>
                <InOutArgument x:TypeArguments="sd4:Stopwatch" x:Key="io_stopwatchState">[stopwatchState]</InOutArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg1:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
          </Sequence>
          <TryCatch DisplayName="Try Catch - Settings Load" sap:VirtualizedContainerService.HintSize="438,726" sap2010:WorkflowViewState.IdRef="TryCatch_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg1:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <Sequence DisplayName="Sequence -Try Settings Load" sap:VirtualizedContainerService.HintSize="376,499" sap2010:WorkflowViewState.IdRef="Sequence_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg1:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence sap2010:Annotation.AnnotationText="Se definen las configuraciones iniciales requeridas por el Framework." DisplayName="Sequence - Initial Configurations required by the Framework" sap:VirtualizedContainerService.HintSize="334,123" sap2010:WorkflowViewState.IdRef="Sequence_51">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg1:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap2010:Annotation.AnnotationText="Se modifica para indicar si la ruta de los archivos de proceso se buscan como asset en el orchestrator o local en el Desktop.&#xA;- Si el valor es True, se busca la ruta en Orchestrator y el nombre del asset se define en la variable ProcessAsset ubicada en SettingsLoad.xaml.&#xA;- Si el valor es False, la ruta está compuesta por la ubicación en disco de la carpeta Desktop más el nombre del proceso que es indicado en la variable ProcessName ubicada en SettingsLoad.xaml" DisplayName="Assign - Define Local / Orchestrator Folder" sap:VirtualizedContainerService.HintSize="262,282" sap2010:WorkflowViewState.IdRef="Assign_2">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[bool_processConsumesAssets]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg1:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                  <Assign sap2010:Annotation.AnnotationText="- Nombre del Asset de Orchestrator en el que se define el Directorio Raíz (Ejemplo: &quot;ProcessPath&quot;)&#xA;&#xA;-Full Path del directorio raíz en caso de que se defina de manera local (Ejemplo: &quot;C:\Users\Usuario\Desktop\Process&quot;)" DisplayName="Assign -  Define the process' root directory" sap:VirtualizedContainerService.HintSize="262,177" sap2010:WorkflowViewState.IdRef="Assign_31">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_ProcessRootDirectory]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">./RootDirectory</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg1:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                  <Assign sap2010:Annotation.AnnotationText="En esta variable definimos si el proceso debe obtener Transaction Items de una Queue" DisplayName="Assign - Define If Process consumes Transaction Items" sap:VirtualizedContainerService.HintSize="262,117" sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[bool_IsTransactionItemConsumer]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg1:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                </Sequence>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Genera el Diccionario de Configuraciones, Colección de Aplicaciones a Iniciar y una Colección de Aplicaciones a cerrar" DisplayName="Invoke SettingsLoad workflow" sap:VirtualizedContainerService.HintSize="334,144" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Settings Load/SettingsLoad.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <OutArgument x:TypeArguments="scg1:Dictionary(x:String, x:String)" x:Key="out_dicConfig">[dicConfig]</OutArgument>
                    <OutArgument x:TypeArguments="sd5:DataTable" x:Key="out_processesToKill">[dt_processesToKill]</OutArgument>
                    <OutArgument x:TypeArguments="sd5:DataTable" x:Key="out_processesToStart">[dt_processesToStart]</OutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_str_ProcessRootDirectory">[str_ProcessRootDirectory]</InArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_bool_processConsumesAssets">[bool_processConsumesAssets]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg1:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <Assign DisplayName="Assign - Set Transition Status to True in Settings load" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[bool_StateStatus]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s1:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg1:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s1:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s1:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <ui:MultipleAssign DisplayName="Multiple Assign -  Catch Settings Load Actions" sap:VirtualizedContainerService.HintSize="338,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                    <ui:MultipleAssign.AssignOperations>
                      <scg1:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="s1:Exception">[ex_FlowException]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="s1:Exception">[exception]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:Boolean">[bool_StateStatus]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg1:List>
                    </ui:MultipleAssign.AssignOperations>
                  </ui:MultipleAssign>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
            <TryCatch.Finally>
              <If Condition="[dicConfig Is Nothing]" DisplayName="If - The configuration dictionary is empty" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg1:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Sequence - Log Fatal Exception" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_53">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg1:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message - Configuration Dictionary Fatal Exception" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Fatal" Message="[&quot;The archive Settings.xlsx couldn't be read and the Configuration dictionary is empty, the process can't continue. &quot; + Environment.NewLine + &quot;Exception Message: &quot; + ex_FlowException.Message + Environment.NewLine + &quot;Exception Source: &quot; + ex_FlowException.Source + Environment.NewLine + &quot;Exception StackTrace: &quot; + ex_FlowException.StackTrace]" />
                    <TerminateWorkflow DisplayName="Terminate Workflow" Exception="[New ApplicationException(&quot;The archive Settings.xlsx couldn't be read and the Configuration dictionary is empty, the process can't continue. &quot; + Environment.NewLine + &quot;Exception Message: &quot; + ex_FlowException.Message + Environment.NewLine + &quot;Exception Source: &quot; + ex_FlowException.Source + Environment.NewLine + &quot;Exception StackTrace: &quot; + ex_FlowException.StackTrace)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Detención de Cronómetro del estado Settings Load" DisplayName="Invoke ChronometerStop workflow - Settings Load" sap:VirtualizedContainerService.HintSize="334,118" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Chronometer\ChronometerStop.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_str_Name">Settings Load</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_str_ParentName">Framework</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_str_State">[If (bool_StateStatus, "Successful", "Failed")]</InArgument>
                      <InOutArgument x:TypeArguments="sd4:Stopwatch" x:Key="io_stopwatchState">[stopwatchState]</InOutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg1:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                </If.Else>
              </If>
            </TryCatch.Finally>
          </TryCatch>
        </Sequence>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg1:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">248.5,36.5</av:Point>
          <av:Size x:Key="ShapeSize">227,87</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">193</x:Double>
          <x:Double x:Key="StateContainerHeight">51.079999999999984</x:Double>
        </scg1:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State.Transitions>
        <Transition DisplayName="Successful Configuration" sap:VirtualizedContainerService.HintSize="450,512" sap2010:WorkflowViewState.IdRef="Transition_14">
          <sap:WorkflowViewStateService.ViewState>
            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">475.5,80 645,80</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">36</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">37</x:Int32>
            </scg1:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <State x:Name="__ReferenceID0" DisplayName="Initialization" sap:VirtualizedContainerService.HintSize="214,87" sap2010:WorkflowViewState.IdRef="State_7">
              <State.Entry>
                <Sequence DisplayName="Sequence - Inicialization" sap:VirtualizedContainerService.HintSize="517,1932" sap2010:WorkflowViewState.IdRef="Sequence_11">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg1:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Chronometer reset" sap:VirtualizedContainerService.HintSize="475,66" sap2010:WorkflowViewState.IdRef="Sequence_6">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg1:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - Set Transition Status to False in Inicialization" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[bool_StateStatus]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Inicio de Cronómetro del Estado Initialization" DisplayName="Invoke ChronometerReset workflow - Initialization" sap:VirtualizedContainerService.HintSize="334,118" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Chronometer\ChronometerReset.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_str_Name">Initialization</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_str_ParentName">Framework</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_str_State">Executing</InArgument>
                        <InOutArgument x:TypeArguments="sd4:Stopwatch" x:Key="io_stopwatchState">[stopwatchState]</InOutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg1:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                  <TryCatch DisplayName="Try Catch - Initialization" sap:VirtualizedContainerService.HintSize="475,1734" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg1:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch.Try>
                      <Sequence DisplayName="Sequence - Try Inicialization" sap:VirtualizedContainerService.HintSize="437,1507" sap2010:WorkflowViewState.IdRef="Sequence_8">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg1:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="Sequence - Previous Validations" sap:VirtualizedContainerService.HintSize="395,1315" sap2010:WorkflowViewState.IdRef="Sequence_7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg1:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Valida las constantes definidas en el Diccionario de Configuraciones" DisplayName="Invoke ValidateDictionaryConstants workflow" sap:VirtualizedContainerService.HintSize="353,154" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_34" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Initialization\ValidateDictionaryConstants.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="scg1:Dictionary(x:String, x:String)" x:Key="in_dicConfig">[dicConfig]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg1:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Valida Conexión a Internet" DisplayName="Invoke ValidateInternetAvailability workflow" sap:VirtualizedContainerService.HintSize="353,143" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Initialization\ValidateInternetAvailability.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="scg1:Dictionary(x:String, x:String)" x:Key="in_dicConfig">[dicConfig]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg1:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Valida la existencia de los Folders Input, Logs y Output. Procede a crearlos de ser necesario." DisplayName="Invoke ValidateFoldersExistance workflow" sap:VirtualizedContainerService.HintSize="353,154" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Initialization/ValidateFoldersExistance.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="scg1:Dictionary(x:String, x:String)" x:Key="in_dicConfig">[dicConfig]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg1:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Fuerza el cierre de procesos que fueron indicados en el archivo de Settings" DisplayName="Invoke KillAllProcesses workflow" sap:VirtualizedContainerService.HintSize="353,154" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Initialization\KillAllProcesses.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="sd5:DataTable" x:Key="in_dt_processesToKill">[dt_processesToKill]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg1:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Inicia las aplicaciones que fueron indicadas en el archivo de Settings" DisplayName="Invoke StartAllProcesses workflow" sap:VirtualizedContainerService.HintSize="353,154" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Initialization\StartAllProcesses.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="sd5:DataTable" x:Key="in_dt_processesToStart">[dt_processesToStart]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg1:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke LogInMedicalQR workflow" sap:VirtualizedContainerService.HintSize="353,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_35" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Initialization\LogInMedicalQR.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_str_URL">[dicConfig("MedicalQR_URL")]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AccessREFEPS workflow" sap:VirtualizedContainerService.HintSize="353,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_38" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Initialization\AccessREFEPS.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_str_URL">
                                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="dicConfig(&quot;REFEPS_URL&quot;)" />
                              </InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                        </Sequence>
                        <Assign DisplayName="Assign - Set Transition Status to True in Inicialization" sap:VirtualizedContainerService.HintSize="395,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[bool_StateStatus]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s1:Exception" sap:VirtualizedContainerService.HintSize="441,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg1:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s1:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s1:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <ui:MultipleAssign DisplayName="Multiple Assign -  Catch Initialization Actions" sap:VirtualizedContainerService.HintSize="334,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                            <ui:MultipleAssign.AssignOperations>
                              <scg1:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="s1:Exception">[ex_FlowException]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="s1:Exception">[exception]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[bool_StateStatus]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                              </scg1:List>
                            </ui:MultipleAssign.AssignOperations>
                          </ui:MultipleAssign>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                    <TryCatch.Finally>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Detención de Cronómetro del estado Initialization" DisplayName="Invoke ChronometerStop workflow - End of Initialization" sap:VirtualizedContainerService.HintSize="334,118" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Chronometer\ChronometerStop.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_str_Name">Initialization</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_str_ParentName">Framework</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_str_State">[If (bool_StateStatus, "Successful", "Failed")]</InArgument>
                          <InOutArgument x:TypeArguments="sd4:Stopwatch" x:Key="io_stopwatchState">[stopwatchState]</InOutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg1:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                    </TryCatch.Finally>
                  </TryCatch>
                </Sequence>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">645,36.5</av:Point>
                  <av:Size x:Key="ShapeSize">214,87</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">179.51459334715594</x:Double>
                  <x:Double x:Key="StateContainerHeight">51.144196070226315</x:Double>
                </scg1:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <State.Transitions>
                <Transition DisplayName="Successful Initialization" sap:VirtualizedContainerService.HintSize="450,514" sap2010:WorkflowViewState.IdRef="Transition_12">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">859,84.35 889,84.35 889,85.05 1030.5,85.05</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">40</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">33</x:Int32>
                    </scg1:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <State x:Name="__ReferenceID1" DisplayName="Data Mapping" sap:VirtualizedContainerService.HintSize="223,99" sap2010:WorkflowViewState.IdRef="State_6">
                      <State.Entry>
                        <Sequence DisplayName="Sequence - Data Mapping" sap:VirtualizedContainerService.HintSize="671,1125" sap2010:WorkflowViewState.IdRef="Sequence_20">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg1:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence DisplayName="Chronometer reset" sap:VirtualizedContainerService.HintSize="629,66" sap2010:WorkflowViewState.IdRef="Sequence_12">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg1:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="Assign - Set Transition Status to False in Data Mapping" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Boolean">[bool_StateStatus]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Inicio de Cronómetro del Estado Data Mapping" DisplayName="Invoke ChronometerReset workflow - Data Mapping" sap:VirtualizedContainerService.HintSize="334,118" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Chronometer\ChronometerReset.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_str_Name">Data Mapping</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_str_ParentName">Framework</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_str_State">Executing</InArgument>
                                <InOutArgument x:TypeArguments="sd4:Stopwatch" x:Key="io_stopwatchState">[stopwatchState]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg1:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                          <TryCatch DisplayName="Try Catch - Data Mapping" sap:VirtualizedContainerService.HintSize="629,927" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg1:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch.Try>
                              <Sequence DisplayName="Sequence - Try Data Mapping" sap:VirtualizedContainerService.HintSize="591,678" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg1:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke DownloadPendingDoctors workflow" sap:VirtualizedContainerService.HintSize="549,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_36" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Data Mapping\DownloadPendingDoctors.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <OutArgument x:TypeArguments="sd5:DataTable" x:Key="out_dt_PendingDoctors">[dt_PendingDoctors]</OutArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <If Condition="[dt_PendingDoctors.Rows.Count &gt; 0]" DisplayName="If - Pending Doctors?" sap:VirtualizedContainerService.HintSize="549,434" sap2010:WorkflowViewState.IdRef="If_14">
                                  <If.Then>
                                    <Sequence DisplayName="Sequence - Continue Process" sap:VirtualizedContainerService.HintSize="304,276" sap2010:WorkflowViewState.IdRef="Sequence_68">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg1:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:AddDataColumn x:TypeArguments="x:Boolean" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="Result" DataTable="[dt_PendingDoctors]" DefaultValue="False" DisplayName="Add Data Column - Result" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1" />
                                      <ui:AddDataColumn x:TypeArguments="x:String" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" Unique="{x:Null}" ColumnName="Error" DataTable="[dt_PendingDoctors]" DisplayName="Add Data Column - Error" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_2" MaxLength="100" />
                                      <Assign DisplayName="Assign - Set Transition Status to False in Data Mapping" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[bool_StateStatus]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="Info" Message="[&quot;No Pending Doctors&quot;]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg1:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:LogMessage>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s1:Exception" sap:VirtualizedContainerService.HintSize="595,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg1:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s1:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s1:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <ui:MultipleAssign DisplayName="Multiple Assign -  Catch Exception Data Mapping Actions" sap:VirtualizedContainerService.HintSize="334,160" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                                    <ui:MultipleAssign.AssignOperations>
                                      <scg1:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="s1:Exception">[ex_FlowException]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="s1:Exception">[exception]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[bool_StateStatus]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[bool_returnToDataMapping]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:Boolean">[Boolean.Parse(dicConfig("ReturnToDataMappingOnGenericException").Trim)]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                      </scg1:List>
                                    </ui:MultipleAssign.AssignOperations>
                                  </ui:MultipleAssign>
                                </ActivityAction>
                              </Catch>
                              <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="595,21" sap2010:WorkflowViewState.IdRef="Catch`1_11">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg1:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                  </ActivityAction.Argument>
                                  <ui:MultipleAssign DisplayName="Multiple Assign -  Catch BRE Data Mapping Actions" sap:VirtualizedContainerService.HintSize="334,160" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
                                    <ui:MultipleAssign.AssignOperations>
                                      <scg1:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="s1:Exception">[ex_BusinessRuleException]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="s1:Exception">[exception]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[bool_StateStatus]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[bool_returnToDataMapping]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:Boolean">[Boolean.Parse(dicConfig("ReturnToDataMappingOnBRE").Trim)]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                      </scg1:List>
                                    </ui:MultipleAssign.AssignOperations>
                                  </ui:MultipleAssign>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                            <TryCatch.Finally>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Detención de Cronómetro del estado Data Mapping" DisplayName="Invoke ChronometerStop workflow - End of Data Mapping" sap:VirtualizedContainerService.HintSize="334,118" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Chronometer\ChronometerStop.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_str_Name">Data Mapping</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_str_ParentName">Framework</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_str_State">[If (bool_StateStatus, "Successful", "Failed")]</InArgument>
                                  <InOutArgument x:TypeArguments="sd4:Stopwatch" x:Key="io_stopwatchState">[stopwatchState]</InOutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg1:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeWorkflowFile>
                            </TryCatch.Finally>
                          </TryCatch>
                        </Sequence>
                      </State.Entry>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">1030.5,40.5</av:Point>
                          <av:Size x:Key="ShapeSize">223,99</av:Size>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Double x:Key="StateContainerWidth">189.12656096887662</x:Double>
                          <x:Double x:Key="StateContainerHeight">62.7040255961429</x:Double>
                        </scg1:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <State.Transitions>
                        <Transition DisplayName="Successful Data Mapping" sap:VirtualizedContainerService.HintSize="450,512" sap2010:WorkflowViewState.IdRef="Transition_9">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">1253.5,114.75 1283.5,114.75 1283.5,349.2 1251.5,349.2</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">56</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">20</x:Int32>
                            </scg1:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.Condition>
                            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="bool_StateStatus" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_7" />
                          </Transition.Condition>
                          <Transition.To>
                            <State x:Name="__ReferenceID5" DisplayName="Data Processing" sap:VirtualizedContainerService.HintSize="219,104" sap2010:WorkflowViewState.IdRef="State_5">
                              <State.Entry>
                                <Sequence DisplayName="Sequence - Data Processing" sap:VirtualizedContainerService.HintSize="501,751" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg1:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Sequence DisplayName="Chronometer reset" sap:VirtualizedContainerService.HintSize="459,66" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg1:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:MultipleAssign DisplayName="Multiple Assign - Reset Transition Flags" sap:VirtualizedContainerService.HintSize="338,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
                                      <ui:MultipleAssign.AssignOperations>
                                        <scg1:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                                            <ui:AssignOperation.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[bool_StateStatus]</OutArgument>
                                            </ui:AssignOperation.To>
                                            <ui:AssignOperation.Value>
                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                            </ui:AssignOperation.Value>
                                          </ui:AssignOperation>
                                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                                            <ui:AssignOperation.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[bool_returnToDataMapping]</OutArgument>
                                            </ui:AssignOperation.To>
                                            <ui:AssignOperation.Value>
                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                            </ui:AssignOperation.Value>
                                          </ui:AssignOperation>
                                        </scg1:List>
                                      </ui:MultipleAssign.AssignOperations>
                                    </ui:MultipleAssign>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Inicio de Cronómetro del Estado Data Processing" DisplayName="Invoke ChronometerReset workflow - Data Processing" sap:VirtualizedContainerService.HintSize="338,118" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Chronometer\ChronometerReset.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_str_Name">Data Processing</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_str_ParentName">Framework</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_str_State">Executing</InArgument>
                                        <InOutArgument x:TypeArguments="sd4:Stopwatch" x:Key="io_stopwatchState">[stopwatchState]</InOutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg1:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InvokeWorkflowFile>
                                  </Sequence>
                                  <TryCatch DisplayName="Try Catch - Data Processing" sap:VirtualizedContainerService.HintSize="459,553" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg1:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <TryCatch.Try>
                                      <Sequence DisplayName="Sequence - Try Data Processing" sap:VirtualizedContainerService.HintSize="421,304" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg1:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ValidateAndActivatePendingDoctors workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_37" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Data Processing\ValidateAndActivatePendingDoctors.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InOutArgument x:TypeArguments="sd5:DataTable" x:Key="io_dt_PendingDoctors">
                                              <mva:VisualBasicReference x:TypeArguments="sd5:DataTable" ExpressionText="dt_PendingDoctors" />
                                            </InOutArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                        <Assign DisplayName="Assign - Set Transition Status to True in Data Processing" sap:VirtualizedContainerService.HintSize="379,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[bool_StateStatus]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s1:Exception" sap:VirtualizedContainerService.HintSize="425,21" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg1:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s1:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s1:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Sequence - Catch Exception Data Processing" sap:VirtualizedContainerService.HintSize="606,430" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg1:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:MultipleAssign DisplayName="Multiple Assign -  Catch Exception Data Processing Actions" sap:VirtualizedContainerService.HintSize="564,160" sap2010:WorkflowViewState.IdRef="MultipleAssign_7">
                                              <ui:MultipleAssign.AssignOperations>
                                                <scg1:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                                                    <ui:AssignOperation.To>
                                                      <OutArgument x:TypeArguments="s1:Exception">[ex_FlowException]</OutArgument>
                                                    </ui:AssignOperation.To>
                                                    <ui:AssignOperation.Value>
                                                      <InArgument x:TypeArguments="s1:Exception">[exception]</InArgument>
                                                    </ui:AssignOperation.Value>
                                                  </ui:AssignOperation>
                                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                                                    <ui:AssignOperation.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[bool_StateStatus]</OutArgument>
                                                    </ui:AssignOperation.To>
                                                    <ui:AssignOperation.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                    </ui:AssignOperation.Value>
                                                  </ui:AssignOperation>
                                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                                                    <ui:AssignOperation.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[bool_returnToDataMapping]</OutArgument>
                                                    </ui:AssignOperation.To>
                                                    <ui:AssignOperation.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">[Boolean.Parse(dicConfig("ReturnToDataMappingOnGenericException").Trim)]</InArgument>
                                                    </ui:AssignOperation.Value>
                                                  </ui:AssignOperation>
                                                </scg1:List>
                                              </ui:MultipleAssign.AssignOperations>
                                            </ui:MultipleAssign>
                                            <Sequence sap2010:Annotation.AnnotationText="Esta secuencia se ejecuta si el proceso está configurado para obtener QueueItems de una Queue" DisplayName="Sequence - Set TransactionItem Status" sap:VirtualizedContainerService.HintSize="564,138" sap2010:WorkflowViewState.IdRef="Sequence_56">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg1:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <TryCatch DisplayName="Try Catch - Set TransactionItem Status" sap:VirtualizedContainerService.HintSize="522,462" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                                                <TryCatch.Try>
                                                  <If Condition="[bool_IsTransactionItemConsumer and qi_transactionItem IsNot Nothing]" DisplayName="If - The process consumes transaction items from a Queue and has processed a TransactionItem" sap:VirtualizedContainerService.HintSize="484,235" sap2010:WorkflowViewState.IdRef="If_9">
                                                    <If.Then>
                                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SetTransactionItemStatus workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Data Processing/SetTransactionItemStatus.xaml">
                                                        <ui:InvokeWorkflowFile.Arguments>
                                                          <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[qi_transactionItem]</InArgument>
                                                          <InArgument x:TypeArguments="scg1:Dictionary(x:String, x:String)" x:Key="in_dicConfig">[dicConfig]</InArgument>
                                                          <InArgument x:TypeArguments="s1:Exception" x:Key="in_FlowException">[ex_FlowException]</InArgument>
                                                          <InArgument x:TypeArguments="s1:Exception" x:Key="in_BusinessRuleException">[ex_BusinessRuleException]</InArgument>
                                                        </ui:InvokeWorkflowFile.Arguments>
                                                      </ui:InvokeWorkflowFile>
                                                    </If.Then>
                                                  </If>
                                                </TryCatch.Try>
                                                <TryCatch.Catches>
                                                  <Catch x:TypeArguments="s1:Exception" sap:VirtualizedContainerService.HintSize="488,21" sap2010:WorkflowViewState.IdRef="Catch`1_12">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg1:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ActivityAction x:TypeArguments="s1:Exception">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="s1:Exception" Name="exception" />
                                                      </ActivityAction.Argument>
                                                      <ui:LogMessage DisplayName="Log Message - Fatal Exception at Data Processing's Finally" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Fatal" Message="[dicConfig(&quot;SetTransactionStatusException&quot;) + exception.Message + &quot; at Source: &quot; + exception.Source]" />
                                                    </ActivityAction>
                                                  </Catch>
                                                </TryCatch.Catches>
                                              </TryCatch>
                                            </Sequence>
                                          </Sequence>
                                        </ActivityAction>
                                      </Catch>
                                      <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="425,21" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg1:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Sequence - Catch BusinessRuleException Data Processing" sap:VirtualizedContainerService.HintSize="380,66" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg1:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:MultipleAssign DisplayName="Multiple Assign -  Catch BRE Data Processing Actions" sap:VirtualizedContainerService.HintSize="338,160" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
                                              <ui:MultipleAssign.AssignOperations>
                                                <scg1:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                                                    <ui:AssignOperation.To>
                                                      <OutArgument x:TypeArguments="s1:Exception">[ex_BusinessRuleException]</OutArgument>
                                                    </ui:AssignOperation.To>
                                                    <ui:AssignOperation.Value>
                                                      <InArgument x:TypeArguments="s1:Exception">[exception]</InArgument>
                                                    </ui:AssignOperation.Value>
                                                  </ui:AssignOperation>
                                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                                                    <ui:AssignOperation.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[bool_StateStatus]</OutArgument>
                                                    </ui:AssignOperation.To>
                                                    <ui:AssignOperation.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                    </ui:AssignOperation.Value>
                                                  </ui:AssignOperation>
                                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                                                    <ui:AssignOperation.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[bool_returnToDataMapping]</OutArgument>
                                                    </ui:AssignOperation.To>
                                                    <ui:AssignOperation.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">[Boolean.Parse(dicConfig("ReturnToDataMappingOnBRE").Trim)]</InArgument>
                                                    </ui:AssignOperation.Value>
                                                  </ui:AssignOperation>
                                                </scg1:List>
                                              </ui:MultipleAssign.AssignOperations>
                                            </ui:MultipleAssign>
                                            <Sequence sap2010:Annotation.AnnotationText="Esta secuencia se ejecuta si el proceso está configurado para obtener QueueItems de una Queue" DisplayName="Sequence - Set TransactionItem Status" sap:VirtualizedContainerService.HintSize="338,138" sap2010:WorkflowViewState.IdRef="Sequence_57">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg1:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <TryCatch DisplayName="Try Catch - Set TransactionItem Status" sap:VirtualizedContainerService.HintSize="522,462" sap2010:WorkflowViewState.IdRef="TryCatch_10">
                                                <TryCatch.Try>
                                                  <If Condition="[bool_IsTransactionItemConsumer and qi_transactionItem IsNot Nothing]" DisplayName="If - The process consumes transaction items from a Queue and has processed a TransactionItem" sap:VirtualizedContainerService.HintSize="484,235" sap2010:WorkflowViewState.IdRef="If_10">
                                                    <If.Then>
                                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SetTransactionItemStatus workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Data Processing/SetTransactionItemStatus.xaml">
                                                        <ui:InvokeWorkflowFile.Arguments>
                                                          <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[qi_transactionItem]</InArgument>
                                                          <InArgument x:TypeArguments="scg1:Dictionary(x:String, x:String)" x:Key="in_dicConfig">[dicConfig]</InArgument>
                                                          <InArgument x:TypeArguments="s1:Exception" x:Key="in_FlowException">[ex_FlowException]</InArgument>
                                                          <InArgument x:TypeArguments="s1:Exception" x:Key="in_BusinessRuleException">[ex_BusinessRuleException]</InArgument>
                                                        </ui:InvokeWorkflowFile.Arguments>
                                                      </ui:InvokeWorkflowFile>
                                                    </If.Then>
                                                  </If>
                                                </TryCatch.Try>
                                                <TryCatch.Catches>
                                                  <Catch x:TypeArguments="s1:Exception" sap:VirtualizedContainerService.HintSize="488,21" sap2010:WorkflowViewState.IdRef="Catch`1_13">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg1:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ActivityAction x:TypeArguments="s1:Exception">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="s1:Exception" Name="exception" />
                                                      </ActivityAction.Argument>
                                                      <ui:LogMessage DisplayName="Log Message - Fatal Exception at Data Processing's Finally" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Fatal" Message="[dicConfig(&quot;SetTransactionStatusException&quot;) + exception.Message + &quot; at Source: &quot; + exception.Source]" />
                                                    </ActivityAction>
                                                  </Catch>
                                                </TryCatch.Catches>
                                              </TryCatch>
                                            </Sequence>
                                          </Sequence>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                    <TryCatch.Finally>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Detención de Cronómetro del estado Data Processing" DisplayName="Invoke ChronometerStop workflow - End of Data Processing" sap:VirtualizedContainerService.HintSize="334,118" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Chronometer\ChronometerStop.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_str_Name">Data Processing</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_str_ParentName">Framework</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_str_State">[If (bool_StateStatus, "Successful", "Failed")]</InArgument>
                                          <InOutArgument x:TypeArguments="sd4:Stopwatch" x:Key="io_stopwatchState">[stopwatchState]</InOutArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg1:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:InvokeWorkflowFile>
                                    </TryCatch.Finally>
                                  </TryCatch>
                                </Sequence>
                              </State.Entry>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">1032.5,318</av:Point>
                                  <av:Size x:Key="ShapeSize">219,104</av:Size>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Double x:Key="StateContainerWidth">184.69745230827584</x:Double>
                                  <x:Double x:Key="StateContainerHeight">67.975686333894146</x:Double>
                                </scg1:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <State.Transitions>
                                <Transition DisplayName="Data Processing Exception" sap:VirtualizedContainerService.HintSize="506,512" sap2010:WorkflowViewState.IdRef="Transition_4">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:PointCollection x:Key="ConnectorLocation">1032.5,401.2 1002.5,401.2 1002.5,440.5 681.75,440.5 681.75,410.5</av:PointCollection>
                                      <x:Int32 x:Key="SrcConnectionPointIndex">61</x:Int32>
                                      <x:Int32 x:Key="DestConnectionPointIndex">59</x:Int32>
                                    </scg1:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Transition.Condition>[ex_FlowException IsNot Nothing or ex_BusinessRuleException IsNot Nothing]</Transition.Condition>
                                  <Transition.To>
                                    <State x:Name="__ReferenceID3" DisplayName="Exception Handler" sap:VirtualizedContainerService.HintSize="359,141" sap2010:WorkflowViewState.IdRef="State_3">
                                      <State.Entry>
                                        <Sequence DisplayName="Sequence - Exception Handler" sap:VirtualizedContainerService.HintSize="480,1060" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg1:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Inicio de Cronómetro del Estado Exception Handler" DisplayName="Invoke ChronometerReset workflow - Exception Handler" sap:VirtualizedContainerService.HintSize="438,118" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Chronometer\ChronometerReset.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_str_Name">Exception Handler</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_str_ParentName">Framework</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_str_State">Executing</InArgument>
                                              <InOutArgument x:TypeArguments="sd4:Stopwatch" x:Key="io_stopwatchState">[stopwatchState]</InOutArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg1:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:InvokeWorkflowFile>
                                          <TryCatch DisplayName="Try Catch - Exception Handler" sap:VirtualizedContainerService.HintSize="438,810" sap2010:WorkflowViewState.IdRef="TryCatch_12">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg1:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <TryCatch.Try>
                                              <Sequence DisplayName="Sequence - Try Exception Handler" sap:VirtualizedContainerService.HintSize="377,578" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg1:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Sequence sap2010:Annotation.AnnotationText="En este secuencia se loguea la excepción que fue lanzada durante la ejecución del proceso" DisplayName="Sequence - Log exception's message" sap:VirtualizedContainerService.HintSize="335,144" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg1:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If Condition="[ex_FlowException IsNot Nothing]" DisplayName="If - Flow's exception is NOT nothing" sap:VirtualizedContainerService.HintSize="484,239" sap2010:WorkflowViewState.IdRef="If_12">
                                                    <If.Then>
                                                      <ui:LogMessage DisplayName="Log Message - Flow's Exception Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_20" Level="Fatal" Message="[ex_FlowException.Message]" />
                                                    </If.Then>
                                                  </If>
                                                  <If Condition="[ex_BusinessRuleException IsNot Nothing]" DisplayName="If - Business Rule Exception  is NOT nothing" sap:VirtualizedContainerService.HintSize="484,239" sap2010:WorkflowViewState.IdRef="If_13">
                                                    <If.Then>
                                                      <ui:LogMessage DisplayName="Log Message - BusinessRuleException Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Error" Message="[ex_BusinessRuleException.Message]" />
                                                    </If.Then>
                                                  </If>
                                                </Sequence>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se toma una captura de pantalla de la máquina en la que se ejecuta el proceso." DisplayName="Invoke TakeScreenshot workflow" sap:VirtualizedContainerService.HintSize="335,131" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Exception Handler\TakeScreenshot.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="scg1:Dictionary(x:String, x:String)" x:Key="in_dicConfig">[dicConfig]</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg1:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:InvokeWorkflowFile>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Copia el ExecutionLog del día en la carpeta Logs del directorio raíz del proceso" DisplayName="Invoke GetUiPathExecutionLog workflow" sap:VirtualizedContainerService.HintSize="335,131" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Exception Handler\GetUiPathExecutionLog.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="scg1:Dictionary(x:String, x:String)" x:Key="in_dicConfig">[dicConfig]</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg1:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:InvokeWorkflowFile>
                                              </Sequence>
                                            </TryCatch.Try>
                                            <TryCatch.Catches>
                                              <Catch x:TypeArguments="s1:Exception" sap:VirtualizedContainerService.HintSize="404,22" sap2010:WorkflowViewState.IdRef="Catch`1_15">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg1:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ActivityAction x:TypeArguments="s1:Exception">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="s1:Exception" Name="exception" />
                                                  </ActivityAction.Argument>
                                                  <ui:LogMessage DisplayName="Log Message - Fatal exception in Exception Handler" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="Fatal" Message="[dicConfig(&quot;ExceptionHandlerException&quot;) + exception.Message + &quot; at Source: &quot; + exception.Source]" />
                                                </ActivityAction>
                                              </Catch>
                                            </TryCatch.Catches>
                                            <TryCatch.Finally>
                                              <Sequence DisplayName="Sequence - Finally Exception Handler" sap:VirtualizedContainerService.HintSize="380,423" sap2010:WorkflowViewState.IdRef="Sequence_65">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg1:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:MultipleAssign DisplayName="Multiple Assign - Reset Boolean Flags in Exception Handler" sap:VirtualizedContainerService.HintSize="338,160" sap2010:WorkflowViewState.IdRef="MultipleAssign_13">
                                                  <ui:MultipleAssign.AssignOperations>
                                                    <scg1:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_32">
                                                        <ui:AssignOperation.To>
                                                          <OutArgument x:TypeArguments="x:Boolean">[bool_StateStatus]</OutArgument>
                                                        </ui:AssignOperation.To>
                                                        <ui:AssignOperation.Value>
                                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                        </ui:AssignOperation.Value>
                                                      </ui:AssignOperation>
                                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_33">
                                                        <ui:AssignOperation.To>
                                                          <OutArgument x:TypeArguments="s1:Exception">[ex_BusinessRuleException]</OutArgument>
                                                        </ui:AssignOperation.To>
                                                        <ui:AssignOperation.Value>
                                                          <InArgument x:TypeArguments="s1:Exception">[Nothing]</InArgument>
                                                        </ui:AssignOperation.Value>
                                                      </ui:AssignOperation>
                                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_34">
                                                        <ui:AssignOperation.To>
                                                          <OutArgument x:TypeArguments="s1:Exception">[ex_FlowException]</OutArgument>
                                                        </ui:AssignOperation.To>
                                                        <ui:AssignOperation.Value>
                                                          <InArgument x:TypeArguments="s1:Exception">[Nothing]</InArgument>
                                                        </ui:AssignOperation.Value>
                                                      </ui:AssignOperation>
                                                    </scg1:List>
                                                  </ui:MultipleAssign.AssignOperations>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg1:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:MultipleAssign>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Detención de Cronómetro del estado Exception Handler" DisplayName="Invoke ChronometerStop workflow - End of Exception Handler" sap:VirtualizedContainerService.HintSize="338,131" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_31" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Chronometer\ChronometerStop.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_str_Name">Exception Handler</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_str_ParentName">Framework</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_str_State">[If (bool_StateStatus, "Successful", "Failed")]</InArgument>
                                                    <InOutArgument x:TypeArguments="sd4:Stopwatch" x:Key="io_stopwatchState">[stopwatchState]</InOutArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg1:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:InvokeWorkflowFile>
                                              </Sequence>
                                            </TryCatch.Finally>
                                          </TryCatch>
                                        </Sequence>
                                      </State.Entry>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                          <av:Point x:Key="ShapeLocation">412.5,269.5</av:Point>
                                          <av:Size x:Key="ShapeSize">359,141</av:Size>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Double x:Key="StateContainerWidth">325.15547983847273</x:Double>
                                          <x:Double x:Key="StateContainerHeight">104.72064482847679</x:Double>
                                        </scg1:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <State.Transitions>
                                        <Transition DisplayName="Exception Handler Completion" sap:VirtualizedContainerService.HintSize="450,512" sap2010:WorkflowViewState.IdRef="Transition_2">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                              <av:PointCollection x:Key="ConnectorLocation">412.5,375.25 338.2,375.25 338.2,538</av:PointCollection>
                                              <x:Int32 x:Key="SrcConnectionPointIndex">57</x:Int32>
                                              <x:Int32 x:Key="DestConnectionPointIndex">22</x:Int32>
                                            </scg1:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Transition.Condition>
                                            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="bool_StateStatus and bool_returnToDataMapping.Equals(False)" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_4" />
                                          </Transition.Condition>
                                          <Transition.To>
                                            <State x:Name="__ReferenceID2" DisplayName="Cleaning Process" sap:VirtualizedContainerService.HintSize="219,104" sap2010:WorkflowViewState.IdRef="State_2">
                                              <State.Entry>
                                                <Sequence DisplayName="Sequence - Cleaning Process" sap:VirtualizedContainerService.HintSize="498,996" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg1:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Sequence DisplayName="Chronometer reset" sap:VirtualizedContainerService.HintSize="456,66" sap2010:WorkflowViewState.IdRef="Sequence_66">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg1:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign DisplayName="Assign - Set Transition Status to False in Cleaning Process" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_59">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Boolean">[bool_StateStatus]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Inicio de Cronómetro del Estado Cleaning Process" DisplayName="Invoke ChronometerReset workflow - Cleaning Process" sap:VirtualizedContainerService.HintSize="334,118" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Chronometer\ChronometerReset.xaml">
                                                      <ui:InvokeWorkflowFile.Arguments>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_str_Name">Cleaning Process</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_str_ParentName">Framework</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_str_State">Executing</InArgument>
                                                        <InOutArgument x:TypeArguments="sd4:Stopwatch" x:Key="io_stopwatchState">[stopwatchState]</InOutArgument>
                                                      </ui:InvokeWorkflowFile.Arguments>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                        </scg1:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:InvokeWorkflowFile>
                                                  </Sequence>
                                                  <TryCatch DisplayName="Try Catch - Cleaning Process" sap:VirtualizedContainerService.HintSize="456,798" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg1:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <TryCatch.Try>
                                                      <Sequence DisplayName="Sequence - Try Cleaning Process" sap:VirtualizedContainerService.HintSize="418,571" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg1:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <Sequence DisplayName="Sequence - Clean Processes" sap:VirtualizedContainerService.HintSize="376,356" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg1:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke CloseMedicalQR workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_39" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Cleaning Process\CloseMedicalQR.xaml">
                                                            <ui:InvokeWorkflowFile.Arguments>
                                                              <scg1:Dictionary x:TypeArguments="x:String, Argument" />
                                                            </ui:InvokeWorkflowFile.Arguments>
                                                          </ui:InvokeWorkflowFile>
                                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke CloseREFEPS workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_40" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Cleaning Process\CloseREFEPS.xaml">
                                                            <ui:InvokeWorkflowFile.Arguments>
                                                              <scg1:Dictionary x:TypeArguments="x:String, Argument" />
                                                            </ui:InvokeWorkflowFile.Arguments>
                                                          </ui:InvokeWorkflowFile>
                                                        </Sequence>
                                                        <Sequence DisplayName="Sequence - Clean Collections" sap:VirtualizedContainerService.HintSize="376,83" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg1:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </Sequence>
                                                      </Sequence>
                                                    </TryCatch.Try>
                                                    <TryCatch.Catches>
                                                      <Catch x:TypeArguments="s1:Exception" sap:VirtualizedContainerService.HintSize="422,21" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          </scg1:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ActivityAction x:TypeArguments="s1:Exception">
                                                          <ActivityAction.Argument>
                                                            <DelegateInArgument x:TypeArguments="s1:Exception" Name="exception" />
                                                          </ActivityAction.Argument>
                                                          <ui:LogMessage DisplayName="Log Message - Fatal exception in Cleaning process" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Fatal" Message="[dicConfig(&quot;CleaningProcessException&quot;) + exception.Message + &quot; at Source: &quot; + exception.Source]" />
                                                        </ActivityAction>
                                                      </Catch>
                                                    </TryCatch.Catches>
                                                    <TryCatch.Finally>
                                                      <Sequence DisplayName="Sequence - Finally Cleaning Process" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_67">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          </scg1:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Detención de Cronómetro del estado Cleaning Process" DisplayName="Invoke ChronometerStop workflow - End of Cleaning Process" sap:VirtualizedContainerService.HintSize="334,118" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_33" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Chronometer\ChronometerStop.xaml">
                                                          <ui:InvokeWorkflowFile.Arguments>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_str_Name">Cleaning Process</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_str_ParentName">Framework</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_str_State">[If (bool_StateStatus, "Successful", "Failed")]</InArgument>
                                                            <InOutArgument x:TypeArguments="sd4:Stopwatch" x:Key="io_stopwatchState">[stopwatchState]</InOutArgument>
                                                          </ui:InvokeWorkflowFile.Arguments>
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                            </scg1:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </ui:InvokeWorkflowFile>
                                                        <Assign DisplayName="Assign - Set Transition Status to True in Cleaning process' Finally" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_60">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Boolean">[bool_StateStatus]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </Sequence>
                                                    </TryCatch.Finally>
                                                  </TryCatch>
                                                </Sequence>
                                              </State.Entry>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <av:Point x:Key="ShapeLocation">272.5,538</av:Point>
                                                  <av:Size x:Key="ShapeSize">219,104</av:Size>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  <x:Double x:Key="StateContainerWidth">184.69745230827584</x:Double>
                                                  <x:Double x:Key="StateContainerHeight">67.975686333894146</x:Double>
                                                </scg1:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <State.Transitions>
                                                <Transition DisplayName="Cleaning process' Completion " sap:VirtualizedContainerService.HintSize="729,512" sap2010:WorkflowViewState.IdRef="Transition_1">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <av:PointCollection x:Key="ConnectorLocation">272.5,605.6 132,605.6 132,416.5</av:PointCollection>
                                                      <x:Int32 x:Key="SrcConnectionPointIndex">49</x:Int32>
                                                      <x:Int32 x:Key="DestConnectionPointIndex">39</x:Int32>
                                                    </scg1:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Transition.Condition>
                                                    <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="bool_StateStatus And (int_RecoverRetries &gt;= Integer.Parse(dicConfig(&quot;InitMaxRetries&quot;)) Or int_RecoverRetries.Equals(0))" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_5" />
                                                  </Transition.Condition>
                                                  <Transition.To>
                                                    <State x:Name="__ReferenceID4" DisplayName="Final State" sap:VirtualizedContainerService.HintSize="216,113" sap2010:WorkflowViewState.IdRef="State_1" IsFinal="True">
                                                      <State.Entry>
                                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Detención de Cronómetro de Máquina de Estado" DisplayName="Invoke ChronometerStop workflow" sap:VirtualizedContainerService.HintSize="334,118" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Chronometer\ChronometerStop.xaml">
                                                          <ui:InvokeWorkflowFile.Arguments>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_str_Name">Framework</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_str_ParentName" />
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_str_State">Successful</InArgument>
                                                            <InOutArgument x:TypeArguments="sd4:Stopwatch" x:Key="io_stopwatchState">[stopwatchStateMachine]</InOutArgument>
                                                          </ui:InvokeWorkflowFile.Arguments>
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                            </scg1:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </ui:InvokeWorkflowFile>
                                                      </State.Entry>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <av:Point x:Key="ShapeLocation">24,303.5</av:Point>
                                                          <av:Size x:Key="ShapeSize">216,113</av:Size>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          <x:Double x:Key="StateContainerWidth">181.77556737255981</x:Double>
                                                          <x:Double x:Key="StateContainerHeight">76.64849422289322</x:Double>
                                                        </scg1:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </State>
                                                  </Transition.To>
                                                </Transition>
                                                <Transition DisplayName="Recover" sap:VirtualizedContainerService.HintSize="746,512" sap2010:WorkflowViewState.IdRef="Transition_16">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <av:PointCollection x:Key="ConnectorLocation">327.25,642 327.25,713.924494455539 1425.9315768389,713.924494455539 1425.9315768389,20 687.8,20 687.8,36.5</av:PointCollection>
                                                      <x:Int32 x:Key="SrcConnectionPointIndex">19</x:Int32>
                                                      <x:Int32 x:Key="DestConnectionPointIndex">14</x:Int32>
                                                    </scg1:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Transition.To>
                                                    <x:Reference>__ReferenceID0</x:Reference>
                                                  </Transition.To>
                                                  <Transition.Condition>
                                                    <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="bool_StateStatus And Not int_RecoverRetries.Equals(0) And int_RecoverRetries &lt; Integer.Parse(dicConfig(&quot;InitMaxRetries&quot;))" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_6" />
                                                  </Transition.Condition>
                                                </Transition>
                                              </State.Transitions>
                                            </State>
                                          </Transition.To>
                                        </Transition>
                                        <Transition DisplayName="Get next Transaction" sap:VirtualizedContainerService.HintSize="450,512" sap2010:WorkflowViewState.IdRef="Transition_3">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                              <av:PointCollection x:Key="ConnectorLocation">771.5,354.1 828,354.1 828,260.04 1153.15,260.04 1153.15,139.5</av:PointCollection>
                                              <x:Int32 x:Key="SrcConnectionPointIndex">44</x:Int32>
                                              <x:Int32 x:Key="DestConnectionPointIndex">43</x:Int32>
                                            </scg1:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Transition.To>
                                            <x:Reference>__ReferenceID1</x:Reference>
                                          </Transition.To>
                                          <Transition.Action>
                                            <Assign DisplayName="Assign - Reset Boolean Return To Data Mapping in False in Exception Handler" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_61">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Boolean">[bool_returnToDataMapping]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Transition.Action>
                                          <Transition.Condition>[bool_StateStatus and bool_returnToDataMapping]</Transition.Condition>
                                        </Transition>
                                      </State.Transitions>
                                    </State>
                                  </Transition.To>
                                </Transition>
                                <Transition DisplayName="Successful Data Processing" sap:VirtualizedContainerService.HintSize="450,512" sap2010:WorkflowViewState.IdRef="Transition_8">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:PointCollection x:Key="ConnectorLocation">1251.5,396 1281.5,396 1281.5,595.5 1254,595.5</av:PointCollection>
                                      <x:Int32 x:Key="SrcConnectionPointIndex">56</x:Int32>
                                      <x:Int32 x:Key="DestConnectionPointIndex">40</x:Int32>
                                    </scg1:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Transition.Condition>[bool_StateStatus]</Transition.Condition>
                                  <Transition.To>
                                    <State x:Name="__ReferenceID6" DisplayName="Data Output" sap:VirtualizedContainerService.HintSize="652,1411" sap2010:WorkflowViewState.IdRef="State_4">
                                      <State.Entry>
                                        <Sequence DisplayName="Sequence - Data Output" sap:VirtualizedContainerService.HintSize="606,997" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg1:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Sequence DisplayName="Chronometer reset" sap:VirtualizedContainerService.HintSize="564,66" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg1:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:MultipleAssign DisplayName="Multiple Assign - Reset Transition Flags" sap:VirtualizedContainerService.HintSize="338,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_8">
                                              <ui:MultipleAssign.AssignOperations>
                                                <scg1:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                                                    <ui:AssignOperation.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[bool_StateStatus]</OutArgument>
                                                    </ui:AssignOperation.To>
                                                    <ui:AssignOperation.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                    </ui:AssignOperation.Value>
                                                  </ui:AssignOperation>
                                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_20">
                                                    <ui:AssignOperation.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[bool_returnToDataMapping]</OutArgument>
                                                    </ui:AssignOperation.To>
                                                    <ui:AssignOperation.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                    </ui:AssignOperation.Value>
                                                  </ui:AssignOperation>
                                                </scg1:List>
                                              </ui:MultipleAssign.AssignOperations>
                                            </ui:MultipleAssign>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Inicio de Cronómetro del Estado Data Output" DisplayName="Invoke ChronometerReset workflow - Data Output" sap:VirtualizedContainerService.HintSize="338,118" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Chronometer\ChronometerReset.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_str_Name">Data Output</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_str_ParentName">Framework</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_str_State">Executing</InArgument>
                                                <InOutArgument x:TypeArguments="sd4:Stopwatch" x:Key="io_stopwatchState">[stopwatchState]</InOutArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg1:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:InvokeWorkflowFile>
                                          </Sequence>
                                          <TryCatch DisplayName="Try Catch - Data Output" sap:VirtualizedContainerService.HintSize="564,799" sap2010:WorkflowViewState.IdRef="TryCatch_8">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg1:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <TryCatch.Try>
                                              <Sequence DisplayName="Sequence - Try Data Output" sap:VirtualizedContainerService.HintSize="526,550" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg1:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If Condition="[dt_PendingDoctors.Rows.Count &gt; 0]" DisplayName="If - Send Email?" sap:VirtualizedContainerService.HintSize="484,289" sap2010:WorkflowViewState.IdRef="If_15">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg1:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If.Then>
                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SendEmailNotification workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_41" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Data Output\SendEmailNotification.xaml">
                                                      <ui:InvokeWorkflowFile.Arguments>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_str_BodyParameter">
                                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="dicConfig(&quot;mailBody&quot;)" />
                                                        </InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_str_DistributionList">
                                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="dicConfig(&quot;distributionList&quot;) + &quot;;jvalbuena@practia.global&quot;" />
                                                        </InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_str_Subject">
                                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="dicConfig(&quot;mailSubject&quot;)" />
                                                        </InArgument>
                                                        <InArgument x:TypeArguments="sd5:DataTable" x:Key="in_dt_Table">
                                                          <mva:VisualBasicValue x:TypeArguments="sd5:DataTable" ExpressionText="dt_PendingDoctors" />
                                                        </InArgument>
                                                      </ui:InvokeWorkflowFile.Arguments>
                                                    </ui:InvokeWorkflowFile>
                                                  </If.Then>
                                                </If>
                                                <ui:MultipleAssign DisplayName="Multiple Assign - Set Boolean Flags Data Output" sap:VirtualizedContainerService.HintSize="484,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_11">
                                                  <ui:MultipleAssign.AssignOperations>
                                                    <scg1:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_27">
                                                        <ui:AssignOperation.To>
                                                          <OutArgument x:TypeArguments="x:Boolean">[bool_StateStatus]</OutArgument>
                                                        </ui:AssignOperation.To>
                                                        <ui:AssignOperation.Value>
                                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                        </ui:AssignOperation.Value>
                                                      </ui:AssignOperation>
                                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_28">
                                                        <ui:AssignOperation.To>
                                                          <OutArgument x:TypeArguments="x:Boolean">[bool_returnToDataMapping]</OutArgument>
                                                        </ui:AssignOperation.To>
                                                        <ui:AssignOperation.Value>
                                                          <InArgument x:TypeArguments="x:Boolean">[Boolean.Parse(dicConfig("ReturnToDataMappingOnSuccess"))]</InArgument>
                                                        </ui:AssignOperation.Value>
                                                      </ui:AssignOperation>
                                                    </scg1:List>
                                                  </ui:MultipleAssign.AssignOperations>
                                                </ui:MultipleAssign>
                                              </Sequence>
                                            </TryCatch.Try>
                                            <TryCatch.Catches>
                                              <Catch x:TypeArguments="s1:Exception" sap:VirtualizedContainerService.HintSize="530,21" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg1:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ActivityAction x:TypeArguments="s1:Exception">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="s1:Exception" Name="exception" />
                                                  </ActivityAction.Argument>
                                                  <ui:MultipleAssign DisplayName="Multiple Assign -  Catch Exception Data Output Actions" sap:VirtualizedContainerService.HintSize="334,160" sap2010:WorkflowViewState.IdRef="MultipleAssign_9">
                                                    <ui:MultipleAssign.AssignOperations>
                                                      <scg1:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_21">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="s1:Exception">[ex_FlowException]</OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="s1:Exception">[exception]</InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_22">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="x:Boolean">[bool_StateStatus]</OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_23">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="x:Boolean">[bool_returnToDataMapping]</OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="x:Boolean">[Boolean.Parse(dicConfig("ReturnToDataMappingOnGenericException").Trim)]</InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                      </scg1:List>
                                                    </ui:MultipleAssign.AssignOperations>
                                                  </ui:MultipleAssign>
                                                </ActivityAction>
                                              </Catch>
                                              <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="530,21" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg1:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                                  </ActivityAction.Argument>
                                                  <ui:MultipleAssign DisplayName="Multiple Assign -  Catch BRE Data Output Actions" sap:VirtualizedContainerService.HintSize="334,160" sap2010:WorkflowViewState.IdRef="MultipleAssign_10">
                                                    <ui:MultipleAssign.AssignOperations>
                                                      <scg1:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_24">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="s1:Exception">[ex_BusinessRuleException]</OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="s1:Exception">[exception]</InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_25">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="x:Boolean">[bool_StateStatus]</OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_26">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="x:Boolean">[bool_returnToDataMapping]</OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="x:Boolean">[Boolean.Parse(dicConfig("ReturnToDataMappingOnBRE").Trim)]</InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                      </scg1:List>
                                                    </ui:MultipleAssign.AssignOperations>
                                                  </ui:MultipleAssign>
                                                </ActivityAction>
                                              </Catch>
                                            </TryCatch.Catches>
                                            <TryCatch.Finally>
                                              <Sequence DisplayName="Sequence - Data Output's Finally" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg1:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Sequence sap2010:Annotation.AnnotationText="Esta secuencia se ejecuta si el proceso está configurado para obtener QueueItems de una Queue" DisplayName="Sequence - Set TransactionItem Status" sap:VirtualizedContainerService.HintSize="334,138" sap2010:WorkflowViewState.IdRef="Sequence_59">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg1:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <TryCatch DisplayName="Try Catch - Set TransactionItem Status" sap:VirtualizedContainerService.HintSize="522,462" sap2010:WorkflowViewState.IdRef="TryCatch_11">
                                                    <TryCatch.Try>
                                                      <If Condition="[bool_IsTransactionItemConsumer and qi_transactionItem IsNot Nothing]" DisplayName="If - The process consumes transaction items from a Queue and has processed a TransactionItem" sap:VirtualizedContainerService.HintSize="484,235" sap2010:WorkflowViewState.IdRef="If_11">
                                                        <If.Then>
                                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SetTransactionItemStatus workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Data Processing/SetTransactionItemStatus.xaml">
                                                            <ui:InvokeWorkflowFile.Arguments>
                                                              <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[qi_transactionItem]</InArgument>
                                                              <InArgument x:TypeArguments="scg1:Dictionary(x:String, x:String)" x:Key="in_dicConfig">[dicConfig]</InArgument>
                                                              <InArgument x:TypeArguments="s1:Exception" x:Key="in_FlowException">[ex_FlowException]</InArgument>
                                                              <InArgument x:TypeArguments="s1:Exception" x:Key="in_BusinessRuleException">[ex_BusinessRuleException]</InArgument>
                                                            </ui:InvokeWorkflowFile.Arguments>
                                                          </ui:InvokeWorkflowFile>
                                                        </If.Then>
                                                      </If>
                                                    </TryCatch.Try>
                                                    <TryCatch.Catches>
                                                      <Catch x:TypeArguments="s1:Exception" sap:VirtualizedContainerService.HintSize="488,21" sap2010:WorkflowViewState.IdRef="Catch`1_14">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          </scg1:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ActivityAction x:TypeArguments="s1:Exception">
                                                          <ActivityAction.Argument>
                                                            <DelegateInArgument x:TypeArguments="s1:Exception" Name="exception" />
                                                          </ActivityAction.Argument>
                                                          <ui:LogMessage DisplayName="Log Message - Fatal Exception at Data Processing's Finally" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Fatal" Message="[dicConfig(&quot;SetTransactionStatusException&quot;) + exception.Message + &quot; at Source: &quot; + exception.Source]" />
                                                        </ActivityAction>
                                                      </Catch>
                                                    </TryCatch.Catches>
                                                  </TryCatch>
                                                </Sequence>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Detención de Cronómetro del estado Data Output" DisplayName="Invoke ChronometerStop workflow - End of Data Output" sap:VirtualizedContainerService.HintSize="334,118" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Chronometer\ChronometerStop.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_str_Name">Data Output</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_str_ParentName">Framework</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_str_State">[If (bool_StateStatus, "Successful", "Failed")]</InArgument>
                                                    <InOutArgument x:TypeArguments="sd4:Stopwatch" x:Key="io_stopwatchState">[stopwatchState]</InOutArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg1:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:InvokeWorkflowFile>
                                              </Sequence>
                                            </TryCatch.Finally>
                                          </TryCatch>
                                        </Sequence>
                                      </State.Entry>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                          <av:Point x:Key="ShapeLocation">1030,535</av:Point>
                                          <av:Size x:Key="ShapeSize">224,110</av:Size>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Double x:Key="StateContainerWidth">190.05562171610342</x:Double>
                                          <x:Double x:Key="StateContainerHeight">73.733894919905453</x:Double>
                                        </scg1:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <State.Transitions>
                                        <Transition DisplayName="Data Output Total Completion" sap:VirtualizedContainerService.HintSize="450,512" sap2010:WorkflowViewState.IdRef="Transition_5">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                              <av:PointCollection x:Key="ConnectorLocation">1030,584.5 1000,584.5 1000,584.8 491.5,584.8</av:PointCollection>
                                              <x:Int32 x:Key="SrcConnectionPointIndex">33</x:Int32>
                                              <x:Int32 x:Key="DestConnectionPointIndex">32</x:Int32>
                                            </scg1:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Transition.To>
                                            <x:Reference>__ReferenceID2</x:Reference>
                                          </Transition.To>
                                          <Transition.Condition>[bool_StateStatus and bool_returnToDataMapping.Equals(False)]</Transition.Condition>
                                        </Transition>
                                        <Transition DisplayName="Data Output Exception" sap:VirtualizedContainerService.HintSize="506,512" sap2010:WorkflowViewState.IdRef="Transition_6">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                              <av:PointCollection x:Key="ConnectorLocation">1085,535 1085,505 592,505 592,410.5</av:PointCollection>
                                              <x:Int32 x:Key="SrcConnectionPointIndex">18</x:Int32>
                                              <x:Int32 x:Key="DestConnectionPointIndex">39</x:Int32>
                                            </scg1:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Transition.To>
                                            <x:Reference>__ReferenceID3</x:Reference>
                                          </Transition.To>
                                          <Transition.Condition>[ex_FlowException IsNot Nothing or ex_BusinessRuleException IsNot Nothing]</Transition.Condition>
                                        </Transition>
                                        <Transition DisplayName="Get next Transaction" sap:VirtualizedContainerService.HintSize="450,512" sap2010:WorkflowViewState.IdRef="Transition_7">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                              <av:PointCollection x:Key="ConnectorLocation">1254,628.5 1333,628.5 1333,85.05 1253.5,85.05</av:PointCollection>
                                              <x:Int32 x:Key="SrcConnectionPointIndex">64</x:Int32>
                                              <x:Int32 x:Key="DestConnectionPointIndex">32</x:Int32>
                                            </scg1:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Transition.To>
                                            <x:Reference>__ReferenceID1</x:Reference>
                                          </Transition.To>
                                          <Transition.Action>
                                            <Assign DisplayName="Assign - Reset Boolean Return to Data Mapping" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_62">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Boolean">[bool_returnToDataMapping]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Transition.Action>
                                          <Transition.Condition>[bool_StateStatus and bool_returnToDataMapping]</Transition.Condition>
                                        </Transition>
                                      </State.Transitions>
                                    </State>
                                  </Transition.To>
                                </Transition>
                              </State.Transitions>
                            </State>
                          </Transition.To>
                        </Transition>
                        <Transition DisplayName="Data Mapping Exception" sap:VirtualizedContainerService.HintSize="698,512" sap2010:WorkflowViewState.IdRef="Transition_10">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">1063.35,139.5 1063.35,215.04 574.05,215.04 574.05,269.5</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">11</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
                            </scg1:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <x:Reference>__ReferenceID3</x:Reference>
                          </Transition.To>
                          <Transition.Condition>
                            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="bool_StateStatus.Equals(False) and (ex_FlowException IsNot Nothing or ex_BusinessRuleException IsNot Nothing)" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_8" />
                          </Transition.Condition>
                        </Transition>
                        <Transition sap2010:Annotation.AnnotationText="El proceso no cuenta con más &quot;transacciones&quot; para procesar y transiciona al estado Cleaning Process para limpiar el ambiente y finalizar el proceso" DisplayName="No Transaction Data" sap:VirtualizedContainerService.HintSize="662,556" sap2010:WorkflowViewState.IdRef="Transition_11">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">1253.5,60.3 1397,60.3 1397,671 371.05,671 371.05,642</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">12</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">35</x:Int32>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg1:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <x:Reference>__ReferenceID2</x:Reference>
                          </Transition.To>
                          <Transition.Condition>
                            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="bool_StateStatus.Equals(False) And ex_FlowException Is Nothing And ex_BusinessRuleException Is Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_9" />
                          </Transition.Condition>
                        </Transition>
                      </State.Transitions>
                    </State>
                  </Transition.To>
                  <Transition.Action>
                    <Assign DisplayName="Assign - Set Recover Retry" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_65">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[int_RecoverRetries]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">0</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Transition.Action>
                  <Transition.Condition>
                    <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="bool_StateStatus" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_2" />
                  </Transition.Condition>
                </Transition>
                <Transition DisplayName="Initialization Exception" sap:VirtualizedContainerService.HintSize="450,512" sap2010:WorkflowViewState.IdRef="Transition_13">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">709.2,123.5 709.2,153.5 502.25,153.5 502.25,269.5</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">23</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">18</x:Int32>
                    </scg1:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID3</x:Reference>
                  </Transition.To>
                  <Transition.Action>
                    <Assign DisplayName="Assign - Set Recover Retry" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_64">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[int_RecoverRetries]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[int_RecoverRetries + 1]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Transition.Action>
                  <Transition.Condition>
                    <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="ex_FlowException IsNot Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_3" />
                  </Transition.Condition>
                </Transition>
              </State.Transitions>
            </State>
          </Transition.To>
          <Transition.Action>
            <Assign DisplayName="Assign - Set Recover Retry" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_63">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[int_RecoverRetries]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">0</InArgument>
              </Assign.Value>
            </Assign>
          </Transition.Action>
          <Transition.Condition>
            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="bool_StateStatus" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
          </Transition.Condition>
        </Transition>
        <Transition DisplayName="Settings load Exception" sap:VirtualizedContainerService.HintSize="450,512" sap2010:WorkflowViewState.IdRef="Transition_15">
          <sap:WorkflowViewStateService.ViewState>
            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">384.7,123.5 384.7,153.5 448.4,153.5 448.4,269.5</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">47</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">6</x:Int32>
            </scg1:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID3</x:Reference>
          </Transition.To>
          <Transition.Condition>[ex_FlowException IsNot Nothing]</Transition.Condition>
        </Transition>
      </State.Transitions>
      <State.Variables>
        <Variable x:TypeArguments="x:String" Name="str_ProcessRootDirectory" />
      </State.Variables>
    </State>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="bool_StateStatus" />
      <Variable x:TypeArguments="sd4:Stopwatch" Default="[New stopwatch()]" Name="stopwatchState" />
      <Variable x:TypeArguments="sd4:Stopwatch" Default="[New stopwatch()]" Name="stopwatchStateMachine" />
      <Variable x:TypeArguments="scg1:Dictionary(x:String, x:String)" Name="dicConfig" />
      <Variable x:TypeArguments="s1:Exception" Name="ex_FlowException" />
      <Variable x:TypeArguments="sd5:DataTable" Default="[New System.Data.DataTable]" Name="dt_processesToKill" />
      <Variable x:TypeArguments="x:Boolean" Name="bool_IsTransactionItemConsumer" />
      <Variable x:TypeArguments="ui:QueueItem" Name="qi_transactionItem" />
      <Variable x:TypeArguments="sd5:DataTable" Default="[New System.Data.DataTable]" Name="dt_processesToStart" />
      <Variable x:TypeArguments="x:Boolean" Name="bool_returnToDataMapping" />
      <Variable x:TypeArguments="s1:Exception" Name="ex_BusinessRuleException" />
      <Variable x:TypeArguments="x:Boolean" Name="bool_processConsumesAssets" />
      <Variable x:TypeArguments="x:Int32" Name="int_RecoverRetries" />
      <Variable x:TypeArguments="sd5:DataTable" Default="[New DataTable()]" Name="dt_PendingDoctors" />
    </StateMachine.Variables>
  </StateMachine>
</Activity>